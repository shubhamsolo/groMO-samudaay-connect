"""Add intent tracking fields to Room model

Revision ID: 8329f570a116
Revises: 
Create Date: 2025-05-31 14:05:26.890364

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8329f570a116'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('room_user_score', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_room_score'))
        batch_op.drop_index(batch_op.f('idx_room_updates'))
        batch_op.drop_index(batch_op.f('idx_user_rooms'))

    op.drop_table('room_user_score')
    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_intent', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('intent_weights', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('last_intent_update', sa.DateTime(), nullable=True))
        batch_op.drop_column('dominant_emotions')
        batch_op.drop_column('summary_interval')
        batch_op.drop_column('summary_text')
        batch_op.drop_column('last_metrics_update')
        batch_op.drop_column('performance_metrics')
        batch_op.drop_column('sales_metrics')
        batch_op.drop_column('unprocessed_message_count')
        batch_op.drop_column('key_points')
        batch_op.drop_column('conversation_quality')
        batch_op.drop_column('last_summary_update')
        batch_op.drop_column('last_intent_analysis')
        batch_op.drop_column('batch_size')
        batch_op.drop_column('dominant_intents')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.add_column(sa.Column('dominant_intents', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('batch_size', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('last_intent_analysis', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('last_summary_update', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('conversation_quality', sa.FLOAT(), nullable=True))
        batch_op.add_column(sa.Column('key_points', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('unprocessed_message_count', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('sales_metrics', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('performance_metrics', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('last_metrics_update', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('summary_text', sa.TEXT(), nullable=True))
        batch_op.add_column(sa.Column('summary_interval', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('dominant_emotions', sa.TEXT(), nullable=True))
        batch_op.drop_column('last_intent_update')
        batch_op.drop_column('intent_weights')
        batch_op.drop_column('current_intent')

    op.create_table('room_user_score',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('room_id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('total_upvotes', sa.INTEGER(), nullable=True),
    sa.Column('total_downvotes', sa.INTEGER(), nullable=True),
    sa.Column('score_difference', sa.INTEGER(), nullable=True),
    sa.Column('points_earned', sa.INTEGER(), nullable=True),
    sa.Column('total_score', sa.INTEGER(), nullable=True),
    sa.Column('answer_count', sa.INTEGER(), nullable=True),
    sa.Column('last_updated', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('room_id', 'user_id', name=op.f('unique_room_user_score'))
    )
    with op.batch_alter_table('room_user_score', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_user_rooms'), ['user_id', 'room_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_room_updates'), ['room_id', 'last_updated'], unique=False)
        batch_op.create_index(batch_op.f('idx_room_score'), ['room_id', 'total_score', 'answer_count'], unique=False)

    # ### end Alembic commands ###
